
digraph structs {
    rankdir="LR"
    node [shape=plaintext];
    kmem_cache [label=<<TABLE Title="kmem_cache" Border="0" CellBorder="1" CellSpacing="0"><TR><TD ID="kmem_cache" HREF=" " PORT="kmem_cache" ALIGN="CENTER" BGCOLOR="gray"><b>kmem_cache</b></TD></TR><TR><TD ID="kmem_cache_0" HREF=" " PORT="kmem_cache_0" ALIGN="LEFT">kmem_cache_cpu* cpu_slab</TD></TR><TR><TD ID="kmem_cache_1" HREF=" " PORT="kmem_cache_1" ALIGN="LEFT">slab_flags_t flags</TD></TR><TR><TD ID="kmem_cache_2" HREF=" " PORT="kmem_cache_2" ALIGN="LEFT">long unsigned int min_partial</TD></TR><TR><TD ID="kmem_cache_3" HREF=" " PORT="kmem_cache_3" ALIGN="LEFT">unsigned int size</TD></TR><TR><TD ID="kmem_cache_4" HREF=" " PORT="kmem_cache_4" ALIGN="LEFT">unsigned int object_size</TD></TR><TR><TD ID="kmem_cache_5" HREF=" " PORT="kmem_cache_5" ALIGN="LEFT">reciprocal_value reciprocal_size</TD></TR><TR><TD ID="kmem_cache_6" HREF=" " PORT="kmem_cache_6" ALIGN="LEFT">unsigned int offset</TD></TR><TR><TD ID="kmem_cache_7" HREF=" " PORT="kmem_cache_7" ALIGN="LEFT">unsigned int cpu_partial</TD></TR><TR><TD ID="kmem_cache_8" HREF=" " PORT="kmem_cache_8" ALIGN="LEFT">unsigned int cpu_partial_slabs</TD></TR><TR><TD ID="kmem_cache_9" HREF=" " PORT="kmem_cache_9" ALIGN="LEFT">kmem_cache_order_objects oo</TD></TR><TR><TD ID="kmem_cache_10" HREF=" " PORT="kmem_cache_10" ALIGN="LEFT">kmem_cache_order_objects min</TD></TR><TR><TD ID="kmem_cache_11" HREF=" " PORT="kmem_cache_11" ALIGN="LEFT">gfp_t allocflags</TD></TR><TR><TD ID="kmem_cache_12" HREF=" " PORT="kmem_cache_12" ALIGN="LEFT">int refcount</TD></TR><TR><TD ID="kmem_cache_13" HREF=" " PORT="kmem_cache_13" ALIGN="LEFT">void (void *)* ctor</TD></TR><TR><TD ID="kmem_cache_14" HREF=" " PORT="kmem_cache_14" ALIGN="LEFT">unsigned int inuse</TD></TR><TR><TD ID="kmem_cache_15" HREF=" " PORT="kmem_cache_15" ALIGN="LEFT">unsigned int align</TD></TR><TR><TD ID="kmem_cache_16" HREF=" " PORT="kmem_cache_16" ALIGN="LEFT">unsigned int red_left_pad</TD></TR><TR><TD ID="kmem_cache_17" HREF=" " PORT="kmem_cache_17" ALIGN="LEFT">char* name</TD></TR><TR><TD ID="kmem_cache_18" HREF=" " PORT="kmem_cache_18" ALIGN="LEFT">list_head list</TD></TR><TR><TD ID="kmem_cache_19" HREF=" " PORT="kmem_cache_19" ALIGN="LEFT">kobject kobj</TD></TR><TR><TD ID="kmem_cache_20" HREF=" " PORT="kmem_cache_20" ALIGN="LEFT">long unsigned int random</TD></TR><TR><TD ID="kmem_cache_21" HREF=" " PORT="kmem_cache_21" ALIGN="LEFT">unsigned int remote_node_defrag_ratio</TD></TR><TR><TD ID="kmem_cache_22" HREF=" " PORT="kmem_cache_22" ALIGN="LEFT">unsigned int* random_seq</TD></TR><TR><TD ID="kmem_cache_23" HREF=" " PORT="kmem_cache_23" ALIGN="LEFT">unsigned int useroffset</TD></TR><TR><TD ID="kmem_cache_24" HREF=" " PORT="kmem_cache_24" ALIGN="LEFT">unsigned int usersize</TD></TR><TR><TD ID="kmem_cache_25" HREF=" " PORT="kmem_cache_25" ALIGN="LEFT">kmem_cache_node* node[64]</TD></TR></TABLE>>];
kmem_cache_node [label=<<TABLE Title="kmem_cache_node" Border="0" CellBorder="1" CellSpacing="0"><TR><TD ID="kmem_cache_node" HREF=" " PORT="kmem_cache_node" ALIGN="CENTER" BGCOLOR="gray"><b>kmem_cache_node</b></TD></TR><TR><TD ID="kmem_cache_node_0" HREF=" " PORT="kmem_cache_node_0" ALIGN="LEFT">spinlock_t list_lock</TD></TR><TR><TD ID="kmem_cache_node_1" HREF=" " PORT="kmem_cache_node_1" ALIGN="LEFT">long unsigned int nr_partial</TD></TR><TR><TD ID="kmem_cache_node_2" HREF=" " PORT="kmem_cache_node_2" ALIGN="LEFT">list_head partial</TD></TR><TR><TD ID="kmem_cache_node_3" HREF=" " PORT="kmem_cache_node_3" ALIGN="LEFT">atomic_long_t nr_slabs</TD></TR><TR><TD ID="kmem_cache_node_4" HREF=" " PORT="kmem_cache_node_4" ALIGN="LEFT">atomic_long_t total_objects</TD></TR><TR><TD ID="kmem_cache_node_5" HREF=" " PORT="kmem_cache_node_5" ALIGN="LEFT">list_head full</TD></TR></TABLE>>];
kobject [label=<<TABLE Title="kobject" Border="0" CellBorder="1" CellSpacing="0"><TR><TD ID="kobject" HREF=" " PORT="kobject" ALIGN="CENTER" BGCOLOR="gray"><b>kobject</b></TD></TR><TR><TD ID="kobject_0" HREF=" " PORT="kobject_0" ALIGN="LEFT">char* name</TD></TR><TR><TD ID="kobject_1" HREF=" " PORT="kobject_1" ALIGN="LEFT">list_head entry</TD></TR><TR><TD ID="kobject_2" HREF=" " PORT="kobject_2" ALIGN="LEFT">kobject* parent</TD></TR><TR><TD ID="kobject_3" HREF=" " PORT="kobject_3" ALIGN="LEFT">kset* kset</TD></TR><TR><TD ID="kobject_4" HREF=" " PORT="kobject_4" ALIGN="LEFT">kobj_type* ktype</TD></TR><TR><TD ID="kobject_5" HREF=" " PORT="kobject_5" ALIGN="LEFT">kernfs_node* sd</TD></TR><TR><TD ID="kobject_6" HREF=" " PORT="kobject_6" ALIGN="LEFT">kref kref</TD></TR><TR><TD ID="kobject_7" HREF=" " PORT="kobject_7" ALIGN="LEFT">unsigned int state_initialized</TD></TR><TR><TD ID="kobject_8" HREF=" " PORT="kobject_8" ALIGN="LEFT">unsigned int state_in_sysfs</TD></TR><TR><TD ID="kobject_9" HREF=" " PORT="kobject_9" ALIGN="LEFT">unsigned int state_add_uevent_sent</TD></TR><TR><TD ID="kobject_10" HREF=" " PORT="kobject_10" ALIGN="LEFT">unsigned int state_remove_uevent_sent</TD></TR><TR><TD ID="kobject_11" HREF=" " PORT="kobject_11" ALIGN="LEFT">unsigned int uevent_suppress</TD></TR></TABLE>>];
kmem_cache_cpu [label=<<TABLE Title="kmem_cache_cpu" Border="0" CellBorder="1" CellSpacing="0"><TR><TD ID="kmem_cache_cpu" HREF=" " PORT="kmem_cache_cpu" ALIGN="CENTER" BGCOLOR="gray"><b>kmem_cache_cpu</b></TD></TR><TR><TD ID="kmem_cache_cpu_0" HREF=" " PORT="kmem_cache_cpu_0" ALIGN="LEFT">void** freelist</TD></TR><TR><TD ID="kmem_cache_cpu_1" HREF=" " PORT="kmem_cache_cpu_1" ALIGN="LEFT">long unsigned int tid</TD></TR><TR><TD ID="kmem_cache_cpu_2" HREF=" " PORT="kmem_cache_cpu_2" ALIGN="LEFT">slab* slab</TD></TR><TR><TD ID="kmem_cache_cpu_3" HREF=" " PORT="kmem_cache_cpu_3" ALIGN="LEFT">slab* partial</TD></TR><TR><TD ID="kmem_cache_cpu_4" HREF=" " PORT="kmem_cache_cpu_4" ALIGN="LEFT">local_lock_t lock</TD></TR></TABLE>>];
slab [label=<<TABLE Title="slab" Border="0" CellBorder="1" CellSpacing="0"><TR><TD ID="slab" HREF=" " PORT="slab" ALIGN="CENTER" BGCOLOR="gray"><b>slab</b></TD></TR><TR><TD ID="slab_0" HREF=" " PORT="slab_0" ALIGN="LEFT">long unsigned int __page_flags</TD></TR><TR><TD ID="slab_1" HREF=" " PORT="slab_1" ALIGN="LEFT">union </TD></TR><TR><TD ID="slab_2" HREF=" " PORT="slab_2" ALIGN="LEFT">kmem_cache* slab_cache</TD></TR><TR><TD ID="slab_3" HREF=" " PORT="slab_3" ALIGN="LEFT">void* freelist</TD></TR><TR><TD ID="slab_4" HREF=" " PORT="slab_4" ALIGN="LEFT">union </TD></TR><TR><TD ID="slab_5" HREF=" " PORT="slab_5" ALIGN="LEFT">unsigned int __unused</TD></TR><TR><TD ID="slab_6" HREF=" " PORT="slab_6" ALIGN="LEFT">atomic_t __page_refcount</TD></TR><TR><TD ID="slab_7" HREF=" " PORT="slab_7" ALIGN="LEFT">long unsigned int memcg_data</TD></TR></TABLE>>];
union [label=<<TABLE Title="union" Border="0" CellBorder="1" CellSpacing="0"><TR><TD ID="union" HREF=" " PORT="union" ALIGN="CENTER" BGCOLOR="gray"><b>union</b></TD></TR><TR><TD ID="union_0" HREF=" " PORT="union_0" ALIGN="LEFT">list_head slab_list</TD></TR><TR><TD ID="union_1" HREF=" " PORT="union_1" ALIGN="LEFT">callback_head callback_head</TD></TR><TR><TD ID="union_2" HREF=" " PORT="union_2" ALIGN="LEFT">struct {...} </TD></TR></TABLE>>];
callback_head [label=<<TABLE Title="callback_head" Border="0" CellBorder="1" CellSpacing="0"><TR><TD ID="callback_head" HREF=" " PORT="callback_head" ALIGN="CENTER" BGCOLOR="gray"><b>callback_head</b></TD></TR><TR><TD ID="callback_head_0" HREF=" " PORT="callback_head_0" ALIGN="LEFT">callback_head* next</TD></TR><TR><TD ID="callback_head_1" HREF=" " PORT="callback_head_1" ALIGN="LEFT">void (struct callback_head *)* func</TD></TR></TABLE>>];
kref [label=<<TABLE Title="kref" Border="0" CellBorder="1" CellSpacing="0"><TR><TD ID="kref" HREF=" " PORT="kref" ALIGN="CENTER" BGCOLOR="gray"><b>kref</b></TD></TR><TR><TD ID="kref_0" HREF=" " PORT="kref_0" ALIGN="LEFT">refcount_t refcount</TD></TR></TABLE>>];
kernfs_node [label=<<TABLE Title="kernfs_node" Border="0" CellBorder="1" CellSpacing="0"><TR><TD ID="kernfs_node" HREF=" " PORT="kernfs_node" ALIGN="CENTER" BGCOLOR="gray"><b>kernfs_node</b></TD></TR><TR><TD ID="kernfs_node_0" HREF=" " PORT="kernfs_node_0" ALIGN="LEFT">atomic_t count</TD></TR><TR><TD ID="kernfs_node_1" HREF=" " PORT="kernfs_node_1" ALIGN="LEFT">atomic_t active</TD></TR><TR><TD ID="kernfs_node_2" HREF=" " PORT="kernfs_node_2" ALIGN="LEFT">kernfs_node* parent</TD></TR><TR><TD ID="kernfs_node_3" HREF=" " PORT="kernfs_node_3" ALIGN="LEFT">char* name</TD></TR><TR><TD ID="kernfs_node_4" HREF=" " PORT="kernfs_node_4" ALIGN="LEFT">rb_node rb</TD></TR><TR><TD ID="kernfs_node_5" HREF=" " PORT="kernfs_node_5" ALIGN="LEFT">void* ns</TD></TR><TR><TD ID="kernfs_node_6" HREF=" " PORT="kernfs_node_6" ALIGN="LEFT">unsigned int hash</TD></TR><TR><TD ID="kernfs_node_7" HREF=" " PORT="kernfs_node_7" ALIGN="LEFT">union </TD></TR><TR><TD ID="kernfs_node_8" HREF=" " PORT="kernfs_node_8" ALIGN="LEFT">void* priv</TD></TR><TR><TD ID="kernfs_node_9" HREF=" " PORT="kernfs_node_9" ALIGN="LEFT">u64 id</TD></TR><TR><TD ID="kernfs_node_10" HREF=" " PORT="kernfs_node_10" ALIGN="LEFT">short unsigned int flags</TD></TR><TR><TD ID="kernfs_node_11" HREF=" " PORT="kernfs_node_11" ALIGN="LEFT">umode_t mode</TD></TR><TR><TD ID="kernfs_node_12" HREF=" " PORT="kernfs_node_12" ALIGN="LEFT">kernfs_iattrs* iattr</TD></TR></TABLE>>];
kobj_type [label=<<TABLE Title="kobj_type" Border="0" CellBorder="1" CellSpacing="0"><TR><TD ID="kobj_type" HREF=" " PORT="kobj_type" ALIGN="CENTER" BGCOLOR="gray"><b>kobj_type</b></TD></TR><TR><TD ID="kobj_type_0" HREF=" " PORT="kobj_type_0" ALIGN="LEFT">void (struct kobject *)* release</TD></TR><TR><TD ID="kobj_type_1" HREF=" " PORT="kobj_type_1" ALIGN="LEFT">sysfs_ops* sysfs_ops</TD></TR><TR><TD ID="kobj_type_2" HREF=" " PORT="kobj_type_2" ALIGN="LEFT">attribute_group** default_groups</TD></TR><TR><TD ID="kobj_type_3" HREF=" " PORT="kobj_type_3" ALIGN="LEFT">const struct kobj_ns_type_operations *(struct kobject *)* child_ns_type</TD></TR><TR><TD ID="kobj_type_4" HREF=" " PORT="kobj_type_4" ALIGN="LEFT">const void *(struct kobject *)* namespace</TD></TR><TR><TD ID="kobj_type_5" HREF=" " PORT="kobj_type_5" ALIGN="LEFT">void (struct kobject *, kuid_t *, kgid_t *)* get_ownership</TD></TR></TABLE>>];
sysfs_ops [label=<<TABLE Title="sysfs_ops" Border="0" CellBorder="1" CellSpacing="0"><TR><TD ID="sysfs_ops" HREF=" " PORT="sysfs_ops" ALIGN="CENTER" BGCOLOR="gray"><b>sysfs_ops</b></TD></TR><TR><TD ID="sysfs_ops_0" HREF=" " PORT="sysfs_ops_0" ALIGN="LEFT">ssize_t (struct kobject *, struct attribute *, char *)* show</TD></TR><TR><TD ID="sysfs_ops_1" HREF=" " PORT="sysfs_ops_1" ALIGN="LEFT">ssize_t (struct kobject *, struct attribute *, const char *, size_t)* store</TD></TR></TABLE>>];
rb_node [label=<<TABLE Title="rb_node" Border="0" CellBorder="1" CellSpacing="0"><TR><TD ID="rb_node" HREF=" " PORT="rb_node" ALIGN="CENTER" BGCOLOR="gray"><b>rb_node</b></TD></TR><TR><TD ID="rb_node_0" HREF=" " PORT="rb_node_0" ALIGN="LEFT">long unsigned int __rb_parent_color</TD></TR><TR><TD ID="rb_node_1" HREF=" " PORT="rb_node_1" ALIGN="LEFT">rb_node* rb_right</TD></TR><TR><TD ID="rb_node_2" HREF=" " PORT="rb_node_2" ALIGN="LEFT">rb_node* rb_left</TD></TR></TABLE>>];
kernfs_iattrs [label=<<TABLE Title="kernfs_iattrs" Border="0" CellBorder="1" CellSpacing="0"><TR><TD ID="kernfs_iattrs" HREF=" " PORT="kernfs_iattrs" ALIGN="CENTER" BGCOLOR="gray"><b>kernfs_iattrs</b></TD></TR><TR><TD ID="kernfs_iattrs_0" HREF=" " PORT="kernfs_iattrs_0" ALIGN="LEFT">kuid_t ia_uid</TD></TR><TR><TD ID="kernfs_iattrs_1" HREF=" " PORT="kernfs_iattrs_1" ALIGN="LEFT">kgid_t ia_gid</TD></TR><TR><TD ID="kernfs_iattrs_2" HREF=" " PORT="kernfs_iattrs_2" ALIGN="LEFT">timespec64 ia_atime</TD></TR><TR><TD ID="kernfs_iattrs_3" HREF=" " PORT="kernfs_iattrs_3" ALIGN="LEFT">timespec64 ia_mtime</TD></TR><TR><TD ID="kernfs_iattrs_4" HREF=" " PORT="kernfs_iattrs_4" ALIGN="LEFT">timespec64 ia_ctime</TD></TR><TR><TD ID="kernfs_iattrs_5" HREF=" " PORT="kernfs_iattrs_5" ALIGN="LEFT">simple_xattrs xattrs</TD></TR><TR><TD ID="kernfs_iattrs_6" HREF=" " PORT="kernfs_iattrs_6" ALIGN="LEFT">atomic_t nr_user_xattrs</TD></TR><TR><TD ID="kernfs_iattrs_7" HREF=" " PORT="kernfs_iattrs_7" ALIGN="LEFT">atomic_t user_xattr_size</TD></TR></TABLE>>];
kmem_cache_order_objects [label=<<TABLE Title="kmem_cache_order_objects" Border="0" CellBorder="1" CellSpacing="0"><TR><TD ID="kmem_cache_order_objects" HREF=" " PORT="kmem_cache_order_objects" ALIGN="CENTER" BGCOLOR="gray"><b>kmem_cache_order_objects</b></TD></TR><TR><TD ID="kmem_cache_order_objects_0" HREF=" " PORT="kmem_cache_order_objects_0" ALIGN="LEFT">unsigned int x</TD></TR></TABLE>>];
simple_xattrs [label=<<TABLE Title="simple_xattrs" Border="0" CellBorder="1" CellSpacing="0"><TR><TD ID="simple_xattrs" HREF=" " PORT="simple_xattrs" ALIGN="CENTER" BGCOLOR="gray"><b>simple_xattrs</b></TD></TR><TR><TD ID="simple_xattrs_0" HREF=" " PORT="simple_xattrs_0" ALIGN="LEFT">list_head head</TD></TR><TR><TD ID="simple_xattrs_1" HREF=" " PORT="simple_xattrs_1" ALIGN="LEFT">spinlock_t lock</TD></TR></TABLE>>];
timespec64 [label=<<TABLE Title="timespec64" Border="0" CellBorder="1" CellSpacing="0"><TR><TD ID="timespec64" HREF=" " PORT="timespec64" ALIGN="CENTER" BGCOLOR="gray"><b>timespec64</b></TD></TR><TR><TD ID="timespec64_0" HREF=" " PORT="timespec64_0" ALIGN="LEFT">time64_t tv_sec</TD></TR><TR><TD ID="timespec64_1" HREF=" " PORT="timespec64_1" ALIGN="LEFT">long int tv_nsec</TD></TR></TABLE>>];
list_head [label=<<TABLE Title="list_head" Border="0" CellBorder="1" CellSpacing="0"><TR><TD ID="list_head" HREF=" " PORT="list_head" ALIGN="CENTER" BGCOLOR="gray"><b>list_head</b></TD></TR><TR><TD ID="list_head_0" HREF=" " PORT="list_head_0" ALIGN="LEFT">list_head* next</TD></TR><TR><TD ID="list_head_1" HREF=" " PORT="list_head_1" ALIGN="LEFT">list_head* prev</TD></TR></TABLE>>];
kmem_cache:kmem_cache_25 -> kmem_cache_node:kmem_cache_node;
kmem_cache:kmem_cache_19 -> kobject:kobject;
kmem_cache:kmem_cache_0 -> kmem_cache_cpu:kmem_cache_cpu;
kmem_cache_cpu:kmem_cache_cpu_2 -> slab:slab;
slab:slab_1 -> union:union;
union:union_1 -> callback_head:callback_head;
kobject:kobject_6 -> kref:kref;
kobject:kobject_5 -> kernfs_node:kernfs_node;
kobject:kobject_4 -> kobj_type:kobj_type;
kobj_type:kobj_type_1 -> sysfs_ops:sysfs_ops;
kernfs_node:kernfs_node_4 -> rb_node:rb_node;
kernfs_node:kernfs_node_12 -> kernfs_iattrs:kernfs_iattrs;
kmem_cache:kmem_cache_9 -> kmem_cache_order_objects:kmem_cache_order_objects;
kernfs_iattrs:kernfs_iattrs_5 -> simple_xattrs:simple_xattrs;
kernfs_iattrs:kernfs_iattrs_2 -> timespec64:timespec64;
kmem_cache:kmem_cache_18 -> list_head:list_head;

}
