
digraph structs {
    rankdir="LR"
    node [shape=plaintext];
    cred [label=<<TABLE Title="cred" Border="0" CellBorder="1" CellSpacing="0"><TR><TD ID="cred" HREF=" " PORT="cred" ALIGN="CENTER" BGCOLOR="gray"><b>cred</b></TD></TR><TR><TD ID="cred_0" HREF=" " PORT="cred_0" ALIGN="LEFT">atomic_t usage</TD></TR><TR><TD ID="cred_1" HREF=" " PORT="cred_1" ALIGN="LEFT">atomic_t subscribers</TD></TR><TR><TD ID="cred_2" HREF=" " PORT="cred_2" ALIGN="LEFT">void* put_addr</TD></TR><TR><TD ID="cred_3" HREF=" " PORT="cred_3" ALIGN="LEFT">unsigned int magic</TD></TR><TR><TD ID="cred_4" HREF=" " PORT="cred_4" ALIGN="LEFT">kuid_t uid</TD></TR><TR><TD ID="cred_5" HREF=" " PORT="cred_5" ALIGN="LEFT">kgid_t gid</TD></TR><TR><TD ID="cred_6" HREF=" " PORT="cred_6" ALIGN="LEFT">kuid_t suid</TD></TR><TR><TD ID="cred_7" HREF=" " PORT="cred_7" ALIGN="LEFT">kgid_t sgid</TD></TR><TR><TD ID="cred_8" HREF=" " PORT="cred_8" ALIGN="LEFT">kuid_t euid</TD></TR><TR><TD ID="cred_9" HREF=" " PORT="cred_9" ALIGN="LEFT">kgid_t egid</TD></TR><TR><TD ID="cred_10" HREF=" " PORT="cred_10" ALIGN="LEFT">kuid_t fsuid</TD></TR><TR><TD ID="cred_11" HREF=" " PORT="cred_11" ALIGN="LEFT">kgid_t fsgid</TD></TR><TR><TD ID="cred_12" HREF=" " PORT="cred_12" ALIGN="LEFT">unsigned int securebits</TD></TR><TR><TD ID="cred_13" HREF=" " PORT="cred_13" ALIGN="LEFT">kernel_cap_t cap_inheritable</TD></TR><TR><TD ID="cred_14" HREF=" " PORT="cred_14" ALIGN="LEFT">kernel_cap_t cap_permitted</TD></TR><TR><TD ID="cred_15" HREF=" " PORT="cred_15" ALIGN="LEFT">kernel_cap_t cap_effective</TD></TR><TR><TD ID="cred_16" HREF=" " PORT="cred_16" ALIGN="LEFT">kernel_cap_t cap_bset</TD></TR><TR><TD ID="cred_17" HREF=" " PORT="cred_17" ALIGN="LEFT">kernel_cap_t cap_ambient</TD></TR><TR><TD ID="cred_18" HREF=" " PORT="cred_18" ALIGN="LEFT">unsigned char jit_keyring</TD></TR><TR><TD ID="cred_19" HREF=" " PORT="cred_19" ALIGN="LEFT">key* session_keyring</TD></TR><TR><TD ID="cred_20" HREF=" " PORT="cred_20" ALIGN="LEFT">key* process_keyring</TD></TR><TR><TD ID="cred_21" HREF=" " PORT="cred_21" ALIGN="LEFT">key* thread_keyring</TD></TR><TR><TD ID="cred_22" HREF=" " PORT="cred_22" ALIGN="LEFT">key* request_key_auth</TD></TR><TR><TD ID="cred_23" HREF=" " PORT="cred_23" ALIGN="LEFT">void* security</TD></TR><TR><TD ID="cred_24" HREF=" " PORT="cred_24" ALIGN="LEFT">user_struct* user</TD></TR><TR><TD ID="cred_25" HREF=" " PORT="cred_25" ALIGN="LEFT">user_namespace* user_ns</TD></TR><TR><TD ID="cred_26" HREF=" " PORT="cred_26" ALIGN="LEFT">ucounts* ucounts</TD></TR><TR><TD ID="cred_27" HREF=" " PORT="cred_27" ALIGN="LEFT">group_info* group_info</TD></TR><TR><TD ID="cred_28" HREF=" " PORT="cred_28" ALIGN="LEFT">union </TD></TR></TABLE>>];
key [label=<<TABLE Title="key" Border="0" CellBorder="1" CellSpacing="0"><TR><TD ID="key" HREF=" " PORT="key" ALIGN="CENTER" BGCOLOR="gray"><b>key</b></TD></TR><TR><TD ID="key_0" HREF=" " PORT="key_0" ALIGN="LEFT">refcount_t usage</TD></TR><TR><TD ID="key_1" HREF=" " PORT="key_1" ALIGN="LEFT">key_serial_t serial</TD></TR><TR><TD ID="key_2" HREF=" " PORT="key_2" ALIGN="LEFT">union </TD></TR><TR><TD ID="key_3" HREF=" " PORT="key_3" ALIGN="LEFT">rw_semaphore sem</TD></TR><TR><TD ID="key_4" HREF=" " PORT="key_4" ALIGN="LEFT">key_user* user</TD></TR><TR><TD ID="key_5" HREF=" " PORT="key_5" ALIGN="LEFT">void* security</TD></TR><TR><TD ID="key_6" HREF=" " PORT="key_6" ALIGN="LEFT">union </TD></TR><TR><TD ID="key_7" HREF=" " PORT="key_7" ALIGN="LEFT">time64_t last_used_at</TD></TR><TR><TD ID="key_8" HREF=" " PORT="key_8" ALIGN="LEFT">kuid_t uid</TD></TR><TR><TD ID="key_9" HREF=" " PORT="key_9" ALIGN="LEFT">kgid_t gid</TD></TR><TR><TD ID="key_10" HREF=" " PORT="key_10" ALIGN="LEFT">key_perm_t perm</TD></TR><TR><TD ID="key_11" HREF=" " PORT="key_11" ALIGN="LEFT">short unsigned int quotalen</TD></TR><TR><TD ID="key_12" HREF=" " PORT="key_12" ALIGN="LEFT">short unsigned int datalen</TD></TR><TR><TD ID="key_13" HREF=" " PORT="key_13" ALIGN="LEFT">short int state</TD></TR><TR><TD ID="key_14" HREF=" " PORT="key_14" ALIGN="LEFT">long unsigned int flags</TD></TR><TR><TD ID="key_15" HREF=" " PORT="key_15" ALIGN="LEFT">union </TD></TR><TR><TD ID="key_16" HREF=" " PORT="key_16" ALIGN="LEFT">union </TD></TR><TR><TD ID="key_17" HREF=" " PORT="key_17" ALIGN="LEFT">key_restriction* restrict_link</TD></TR></TABLE>>];
user_namespace [label=<<TABLE Title="user_namespace" Border="0" CellBorder="1" CellSpacing="0"><TR><TD ID="user_namespace" HREF=" " PORT="user_namespace" ALIGN="CENTER" BGCOLOR="gray"><b>user_namespace</b></TD></TR><TR><TD ID="user_namespace_0" HREF=" " PORT="user_namespace_0" ALIGN="LEFT">uid_gid_map uid_map</TD></TR><TR><TD ID="user_namespace_1" HREF=" " PORT="user_namespace_1" ALIGN="LEFT">uid_gid_map gid_map</TD></TR><TR><TD ID="user_namespace_2" HREF=" " PORT="user_namespace_2" ALIGN="LEFT">uid_gid_map projid_map</TD></TR><TR><TD ID="user_namespace_3" HREF=" " PORT="user_namespace_3" ALIGN="LEFT">user_namespace* parent</TD></TR><TR><TD ID="user_namespace_4" HREF=" " PORT="user_namespace_4" ALIGN="LEFT">int level</TD></TR><TR><TD ID="user_namespace_5" HREF=" " PORT="user_namespace_5" ALIGN="LEFT">kuid_t owner</TD></TR><TR><TD ID="user_namespace_6" HREF=" " PORT="user_namespace_6" ALIGN="LEFT">kgid_t group</TD></TR><TR><TD ID="user_namespace_7" HREF=" " PORT="user_namespace_7" ALIGN="LEFT">ns_common ns</TD></TR><TR><TD ID="user_namespace_8" HREF=" " PORT="user_namespace_8" ALIGN="LEFT">long unsigned int flags</TD></TR><TR><TD ID="user_namespace_9" HREF=" " PORT="user_namespace_9" ALIGN="LEFT">bool parent_could_setfcap</TD></TR><TR><TD ID="user_namespace_10" HREF=" " PORT="user_namespace_10" ALIGN="LEFT">list_head keyring_name_list</TD></TR><TR><TD ID="user_namespace_11" HREF=" " PORT="user_namespace_11" ALIGN="LEFT">key* user_keyring_register</TD></TR><TR><TD ID="user_namespace_12" HREF=" " PORT="user_namespace_12" ALIGN="LEFT">rw_semaphore keyring_sem</TD></TR><TR><TD ID="user_namespace_13" HREF=" " PORT="user_namespace_13" ALIGN="LEFT">work_struct work</TD></TR><TR><TD ID="user_namespace_14" HREF=" " PORT="user_namespace_14" ALIGN="LEFT">ctl_table_set set</TD></TR><TR><TD ID="user_namespace_15" HREF=" " PORT="user_namespace_15" ALIGN="LEFT">ctl_table_header* sysctls</TD></TR><TR><TD ID="user_namespace_16" HREF=" " PORT="user_namespace_16" ALIGN="LEFT">ucounts* ucounts</TD></TR><TR><TD ID="user_namespace_17" HREF=" " PORT="user_namespace_17" ALIGN="LEFT">long int ucount_max[12]</TD></TR><TR><TD ID="user_namespace_18" HREF=" " PORT="user_namespace_18" ALIGN="LEFT">long int rlimit_max[4]</TD></TR></TABLE>>];
ns_common [label=<<TABLE Title="ns_common" Border="0" CellBorder="1" CellSpacing="0"><TR><TD ID="ns_common" HREF=" " PORT="ns_common" ALIGN="CENTER" BGCOLOR="gray"><b>ns_common</b></TD></TR><TR><TD ID="ns_common_0" HREF=" " PORT="ns_common_0" ALIGN="LEFT">atomic_long_t stashed</TD></TR><TR><TD ID="ns_common_1" HREF=" " PORT="ns_common_1" ALIGN="LEFT">proc_ns_operations* ops</TD></TR><TR><TD ID="ns_common_2" HREF=" " PORT="ns_common_2" ALIGN="LEFT">unsigned int inum</TD></TR><TR><TD ID="ns_common_3" HREF=" " PORT="ns_common_3" ALIGN="LEFT">refcount_t count</TD></TR></TABLE>>];
proc_ns_operations [label=<<TABLE Title="proc_ns_operations" Border="0" CellBorder="1" CellSpacing="0"><TR><TD ID="proc_ns_operations" HREF=" " PORT="proc_ns_operations" ALIGN="CENTER" BGCOLOR="gray"><b>proc_ns_operations</b></TD></TR><TR><TD ID="proc_ns_operations_0" HREF=" " PORT="proc_ns_operations_0" ALIGN="LEFT">char* name</TD></TR><TR><TD ID="proc_ns_operations_1" HREF=" " PORT="proc_ns_operations_1" ALIGN="LEFT">char* real_ns_name</TD></TR><TR><TD ID="proc_ns_operations_2" HREF=" " PORT="proc_ns_operations_2" ALIGN="LEFT">int type</TD></TR><TR><TD ID="proc_ns_operations_3" HREF=" " PORT="proc_ns_operations_3" ALIGN="LEFT">struct ns_common *(struct task_struct *)* get</TD></TR><TR><TD ID="proc_ns_operations_4" HREF=" " PORT="proc_ns_operations_4" ALIGN="LEFT">void (struct ns_common *)* put</TD></TR><TR><TD ID="proc_ns_operations_5" HREF=" " PORT="proc_ns_operations_5" ALIGN="LEFT">int (struct nsset *, struct ns_common *)* install</TD></TR><TR><TD ID="proc_ns_operations_6" HREF=" " PORT="proc_ns_operations_6" ALIGN="LEFT">struct user_namespace *(struct ns_common *)* owner</TD></TR><TR><TD ID="proc_ns_operations_7" HREF=" " PORT="proc_ns_operations_7" ALIGN="LEFT">struct ns_common *(struct ns_common *)* get_parent</TD></TR></TABLE>>];
key_user [label=<<TABLE Title="key_user" Border="0" CellBorder="1" CellSpacing="0"><TR><TD ID="key_user" HREF=" " PORT="key_user" ALIGN="CENTER" BGCOLOR="gray"><b>key_user</b></TD></TR><TR><TD ID="key_user_0" HREF=" " PORT="key_user_0" ALIGN="LEFT">rb_node node</TD></TR><TR><TD ID="key_user_1" HREF=" " PORT="key_user_1" ALIGN="LEFT">mutex cons_lock</TD></TR><TR><TD ID="key_user_2" HREF=" " PORT="key_user_2" ALIGN="LEFT">spinlock_t lock</TD></TR><TR><TD ID="key_user_3" HREF=" " PORT="key_user_3" ALIGN="LEFT">refcount_t usage</TD></TR><TR><TD ID="key_user_4" HREF=" " PORT="key_user_4" ALIGN="LEFT">atomic_t nkeys</TD></TR><TR><TD ID="key_user_5" HREF=" " PORT="key_user_5" ALIGN="LEFT">atomic_t nikeys</TD></TR><TR><TD ID="key_user_6" HREF=" " PORT="key_user_6" ALIGN="LEFT">kuid_t uid</TD></TR><TR><TD ID="key_user_7" HREF=" " PORT="key_user_7" ALIGN="LEFT">int qnkeys</TD></TR><TR><TD ID="key_user_8" HREF=" " PORT="key_user_8" ALIGN="LEFT">int qnbytes</TD></TR></TABLE>>];
key_restriction [label=<<TABLE Title="key_restriction" Border="0" CellBorder="1" CellSpacing="0"><TR><TD ID="key_restriction" HREF=" " PORT="key_restriction" ALIGN="CENTER" BGCOLOR="gray"><b>key_restriction</b></TD></TR><TR><TD ID="key_restriction_0" HREF=" " PORT="key_restriction_0" ALIGN="LEFT">key_restrict_link_func_t check</TD></TR><TR><TD ID="key_restriction_1" HREF=" " PORT="key_restriction_1" ALIGN="LEFT">key* key</TD></TR><TR><TD ID="key_restriction_2" HREF=" " PORT="key_restriction_2" ALIGN="LEFT">key_type* keytype</TD></TR></TABLE>>];
union [label=<<TABLE Title="union" Border="0" CellBorder="1" CellSpacing="0"><TR><TD ID="union" HREF=" " PORT="union" ALIGN="CENTER" BGCOLOR="gray"><b>union</b></TD></TR><TR><TD ID="union_0" HREF=" " PORT="union_0" ALIGN="LEFT">list_head graveyard_link</TD></TR><TR><TD ID="union_1" HREF=" " PORT="union_1" ALIGN="LEFT">rb_node serial_node</TD></TR></TABLE>>];
cred:cred_19 -> key:key;
cred:cred_25 -> user_namespace:user_namespace;
user_namespace:user_namespace_7 -> ns_common:ns_common;
ns_common:ns_common_1 -> proc_ns_operations:proc_ns_operations;
key:key_4 -> key_user:key_user;
key:key_17 -> key_restriction:key_restriction;
key:key_2 -> union:union;

}
